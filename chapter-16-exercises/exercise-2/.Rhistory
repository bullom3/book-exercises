# Install and load the `ggplot2` package
#install.packages('ggplot2')
library("ggplot2")
diamonds_sample  <- sample_n(diamonds, 1000)
# Draw a "boxplot" (with `geom_boxplot`) for the diamond's price (y) by color (x)
ggplot(data = diamonds_sample)
diamonds_sample  <- sample_n(diamonds, 1000)
# Install and load the `ggplot2` package
#install.packages('ggplot2')
library("ggplot2")
diamonds_sample  <- sample_n(diamonds, 1000)
library("dplyr")
library("dplyr")
diamonds_sample  <- sample_n(diamonds, 1000)
# Draw a "boxplot" (with `geom_boxplot`) for the diamond's price (y) by color (x)
ggplot(data = diamonds_sample) +
geom_boxplot(mapping = aes(x = color, y = price))
# This has a lot of outliers, making it harder to read. To fix this, draw the
# same plot but with a _logarithmic_ scale for the y axis.
ggplot(data = diamonds_sample) +
geom_boxplot(mapping = aes(x = color, y = price)) +
scale_y_log10()
# For another version, draw the same plot but with `violin` geometry instead of
# `boxplot` geometry!
# How does the logarithmic scale change the data presentation?
cale_y_log10()
# For another version, draw the same plot but with `violin` geometry instead of
# `boxplot` geometry!
# How does the logarithmic scale change the data presentation?
ggplot(data = diamonds_sample) +
geom_violin(mapping = aes(x = color, y = price))+
scale_y_log10()
# Another interesting plot: draw a plot of the diamonds price (y) by carat (x),
# using a heatmap of 2d bins (geom_bin2d)
# What happens when you make the x and y channels scale logarithmically?
ggplot(data = diamonds_sample) +
geom_bin2d(mapping = aes(x = color, y = price))
# Another interesting plot: draw a plot of the diamonds price (y) by carat (x),
# using a heatmap of 2d bins (geom_bin2d)
# What happens when you make the x and y channels scale logarithmically?
ggplot(data = diamonds_sample) +
geom_bin2d(mapping = aes(x = color, y = price))+
scale_x_log10()+
scale_y_log10()
# Another interesting plot: draw a plot of the diamonds price (y) by carat (x),
# using a heatmap of 2d bins (geom_bin2d)
# What happens when you make the x and y channels scale logarithmically?
ggplot(data = diamonds_sample) +
geom_bin2d(mapping = aes(x = carat, y = price))+
scale_x_log10()+
scale_y_log10()
ggplot(data = diamonds_sample) +
geom_point(mapping = aes(x = carat, y = price, color = clarity))+
scale_color_brewer(palette = "Purples")
ggplot(data = diamonds_sample) +
geom_point(mapping = aes(x = carat, y = price, color = clarity))+
scale_color_brewer(palette = "Purples", direction = -1)
# Take the scatter plot of price by carat data (colored by clarity) and add
# _facets_ based on the diamond's `color`
ggplot(data = diamonds_sample) +
geom_point(mapping = aes(x = carat, y = price, color = clarity)) +
facet_wrap(~cut)
# Take the scatter plot of price by carat data (colored by clarity) and add
# _facets_ based on the diamond's `color`
ggplot(data = diamonds_sample) +
geom_point(mapping = aes(x = carat, y = price, color = color)) +
facet_wrap(~cut)
# Take the scatter plot of price by carat data (colored by clarity) and add
# _facets_ based on the diamond's `color`
ggplot(data = diamonds_sample) +
geom_point(mapping = aes(x = carat, y = price, color = color)) +
facet_wrap(~clarity)
